import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';
import { useNavigate } from 'react-router-dom';
import { toast } from 'sonner';

const Pricing = () => {
  const navigate = useNavigate();

  const plans = [
    {
      name: 'FREE',
      price: '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ',
      color: 'from-gray-500 to-gray-600',
      features: [
        '1 GB RAM',
        '5 GB SSD',
        '–î–æ 5 –∏–≥—Ä–æ–∫–æ–≤',
        '–ë–∞–∑–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
        '–ê–≤—Ç–æ–ø–∞—É–∑–∞ —á–µ—Ä–µ–∑ 1 —á–∞—Å',
        '–¢–æ–ª—å–∫–æ Vanilla —Å–±–æ—Ä–∫–∞'
      ],
      recommended: false
    },
    {
      name: 'PRO',
      price: '45 ‚ÇΩ',
      priceDetail: '–≤ –º–µ—Å—è—Ü',
      color: 'from-blue-500 to-blue-600',
      features: [
        '4 GB RAM',
        '20 GB SSD',
        '–î–æ 20 –∏–≥—Ä–æ–∫–æ–≤',
        '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
        '–ë–µ–∑ –∞–≤—Ç–æ–ø–∞—É–∑—ã',
        '–í—Å–µ —Å–±–æ—Ä–∫–∏ (Paper, Purpur, Forge)',
        '–ê–≤—Ç–æ–±—ç–∫–∞–ø—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å'
      ],
      recommended: false
    },
    {
      name: 'DIAMOND',
      price: '123 ‚ÇΩ',
      priceDetail: '–≤ –º–µ—Å—è—Ü',
      color: 'from-cyan-400 via-cyan-500 to-blue-600',
      features: [
        '‚ö° 12 GB RAM (DDR5)',
        '‚ö° 80 GB NVMe SSD',
        '‚ö° –î–æ 100 –∏–≥—Ä–æ–∫–æ–≤',
        '‚≠ê VIP –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7 (–æ—Ç–≤–µ—Ç –¥–æ 5 –º–∏–Ω)',
        'üîí –ë–µ–∑ –∞–≤—Ç–æ–ø–∞—É–∑—ã',
        'üöÄ –í—Å–µ —Å–±–æ—Ä–∫–∏ (Paper, Purpur, Forge, Fabric)',
        'üíæ –ê–≤—Ç–æ–±—ç–∫–∞–ø—ã –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞',
        'üåê Dedicated IP-–∞–¥—Ä–µ—Å',
        'üõ°Ô∏è DDoS –∑–∞—â–∏—Ç–∞ Premium',
        'üìä –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã CPU',
        'üì¶ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤',
        '‚ú® –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π MySQL/PostgreSQL',
        'üìù FTP/SFTP –¥–æ—Å—Ç—É–ø',
        'üéÆ –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å–±–æ—Ä–∫–∏ (SkyBlock, Prison, etc)'
      ],
      recommended: true
    },
    {
      name: 'ANARCHY',
      price: '1234 ‚ÇΩ',
      priceDetail: '–≤ –º–µ—Å—è—Ü',
      color: 'from-red-500 to-red-600',
      features: [
        '16 GB RAM',
        '100 GB NVMe SSD',
        '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ –∏–≥—Ä–æ–∫–æ–≤',
        '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä',
        '–ë–µ–∑ –∞–≤—Ç–æ–ø–∞—É–∑—ã',
        '–í—Å–µ —Å–±–æ—Ä–∫–∏ + custom',
        '–ê–≤—Ç–æ–±—ç–∫–∞–ø—ã –∫–∞–∂–¥—ã–π —á–∞—Å',
        'Dedicated IP + –ø–æ—Ä—Ç',
        'DDoS –∑–∞—â–∏—Ç–∞ Pro',
        'MySQL –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö',
        'FTP –¥–æ—Å—Ç—É–ø'
      ],
      recommended: false
    }
  ];

  const handleSelectPlan = (planName: string) => {
    if (planName === 'DIAMOND') {
      toast.success('–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ —Ç–∞—Ä–∏—Ñ DIAMOND ‚ú®');
    } else {
      toast.info(`–§—É–Ω–∫—Ü–∏—è —Å–º–µ–Ω—ã —Ç–∞—Ä–∏—Ñ–∞ –Ω–∞ ${planName} —Å–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è`);
    }
  };

  return (
    <div className="min-h-screen bg-background p-4 md:p-6">
      <div className="max-w-7xl mx-auto space-y-6">
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-3">
            <Button 
              variant="ghost" 
              size="icon"
              onClick={() => navigate('/')}
            >
              <Icon name="ArrowLeft" size={24} />
            </Button>
            <div>
              <h1 className="text-2xl font-bold">–¢–∞—Ä–∏—Ñ—ã</h1>
              <p className="text-sm text-muted-foreground">–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–ª–∞–Ω –¥–ª—è –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞</p>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          {plans.map((plan) => (
            <Card 
              key={plan.name}
              className={`relative overflow-hidden ${
                plan.name === 'DIAMOND' 
                  ? 'border-cyan-500 shadow-xl shadow-cyan-500/30 ring-2 ring-cyan-500/50' 
                  : plan.recommended 
                    ? 'border-primary shadow-lg shadow-primary/20' 
                    : ''
              }`}
            >
              {plan.name === 'DIAMOND' && (
                <div className="absolute top-4 right-4">
                  <Badge className="bg-gradient-to-r from-cyan-500 to-blue-600 animate-pulse">
                    <Icon name="Sparkles" size={12} className="mr-1" />
                    –¢–µ–∫—É—â–∏–π
                  </Badge>
                </div>
              )}
              {plan.recommended && plan.name !== 'DIAMOND' && (
                <div className="absolute top-4 right-4">
                  <Badge className="bg-primary">–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º</Badge>
                </div>
              )}
              <CardHeader>
                <div className={`w-16 h-16 rounded-lg bg-gradient-to-br ${plan.color} flex items-center justify-center mb-4`}>
                  <Icon name="Server" size={32} className="text-white" />
                </div>
                <CardTitle className="text-2xl">{plan.name}</CardTitle>
                <div className="pt-2">
                  <div className="text-3xl font-bold">{plan.price}</div>
                  {plan.priceDetail && (
                    <div className="text-sm text-muted-foreground">{plan.priceDetail}</div>
                  )}
                </div>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-2">
                  {plan.features.map((feature, idx) => (
                    <div key={idx} className="flex items-start gap-2">
                      <Icon name="Check" size={16} className="text-accent mt-0.5 flex-shrink-0" />
                      <span className="text-sm">{feature}</span>
                    </div>
                  ))}
                </div>
                <Button 
                  className={`w-full ${
                    plan.name === 'DIAMOND' 
                      ? 'bg-gradient-to-r from-cyan-500 to-blue-600 hover:from-cyan-600 hover:to-blue-700 text-white' 
                      : plan.recommended 
                        ? 'bg-primary hover:bg-primary/90' 
                        : ''
                  }`}
                  variant={plan.name === 'DIAMOND' || plan.recommended ? 'default' : 'outline'}
                  onClick={() => handleSelectPlan(plan.name)}
                >
                  {plan.name === 'DIAMOND' ? (
                    <>
                      <Icon name="Check" size={16} className="mr-2" />
                      –¢–µ–∫—É—â–∏–π –ø–ª–∞–Ω
                    </>
                  ) : (
                    '–í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω'
                  )}
                </Button>
              </CardContent>
            </Card>
          ))}
        </div>

        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Icon name="Info" size={20} />
              –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-3">
            <div className="flex items-start gap-2">
              <Icon name="Check" size={16} className="text-accent mt-0.5" />
              <span className="text-sm">–í—Å–µ —Ç–∞—Ä–∏—Ñ—ã –≤–∫–ª—é—á–∞—é—Ç –±–∞–∑–æ–≤—É—é –∑–∞—â–∏—Ç—É –æ—Ç DDoS –∞—Ç–∞–∫</span>
            </div>
            <div className="flex items-start gap-2">
              <Icon name="Check" size={16} className="text-accent mt-0.5" />
              <span className="text-sm">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–º–µ–Ω—ã —Ç–∞—Ä–∏—Ñ–∞ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç</span>
            </div>
            <div className="flex items-start gap-2">
              <Icon name="Check" size={16} className="text-accent mt-0.5" />
              <span className="text-sm">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ (–º–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å)</span>
            </div>
            <div className="flex items-start gap-2">
              <Icon name="Check" size={16} className="text-accent mt-0.5" />
              <span className="text-sm">–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ —á–µ—Ä–µ–∑ Discord –∏ email –¥–ª—è –≤—Å–µ—Ö —Ç–∞—Ä–∏—Ñ–æ–≤</span>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default Pricing;